{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Keval/VrajeshRndTechnosoft/sabecho-v2/lib/db.ts"],"sourcesContent":["import mongoose, { ConnectOptions } from \"mongoose\";\r\n\r\nconst options: ConnectOptions = {\r\n  serverSelectionTimeoutMS: 5000,\r\n  connectTimeoutMS: 10000,\r\n  socketTimeoutMS: 45000,\r\n  retryWrites: true\r\n};\r\n\r\nconst connectDb = async (): Promise<void> => {\r\n  try {\r\n    await mongoose.connect(process.env.MONGODB_URI as string, options);\r\n    console.log(\"Connected to MongoDB\");\r\n  } catch (err) {\r\n    console.log(`DB connection error - ${err}`);\r\n  }\r\n};\r\n\r\nconst closeDbConnection = async (): Promise<void> => {\r\n  try {\r\n    await mongoose.connection.close();\r\n    console.log(\"MongoDB connection closed\");\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport { connectDb, closeDbConnection };"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,UAA0B;IAC9B,0BAA0B;IAC1B,kBAAkB;IAClB,iBAAiB;IACjB,aAAa;AACf;AAEA,MAAM,YAAY;IAChB,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAY;QAC1D,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,KAAK;QACZ,QAAQ,GAAG,CAAC,CAAC,sBAAsB,EAAE,KAAK;IAC5C;AACF;AAEA,MAAM,oBAAoB;IACxB,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,UAAU,CAAC,KAAK;QAC/B,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC;IAChB;AACF","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Keval/VrajeshRndTechnosoft/sabecho-v2/models/home/About.ts"],"sourcesContent":["import mongoose, { Document, Schema } from 'mongoose';\r\n\r\n// TypeScript interfaces for the schema\r\ninterface NavigationButton {\r\n  label: string;\r\n  link: string;\r\n}\r\n\r\ninterface Award {\r\n  image: string;\r\n  title: string;\r\n}\r\n\r\ninterface Milestone {\r\n  icon: string;\r\n  description: string;\r\n  year: string;\r\n}\r\n\r\ninterface Value {\r\n  icon: string;\r\n  title: string;\r\n}\r\n\r\ninterface AboutUs {\r\n  headerImage: string;\r\n  whoWeAre: {\r\n    title: string;\r\n    description: string;\r\n    images: string[];\r\n  };\r\n  ourValues: {\r\n    title: string;\r\n    description?: string;\r\n    values: Value[];\r\n  };\r\n  ourJourney: {\r\n    title: string;\r\n    description?: string;\r\n    milestones: Milestone[];\r\n  };\r\n  awardsAndAchievements: {\r\n    title: string;\r\n    awards: Award[];\r\n  };\r\n  navigationButtons: NavigationButton[];\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\n// Extend Document for Mongoose\r\ninterface AboutUsDocument extends Document, AboutUs {}\r\n\r\n// Define the Mongoose schema\r\nconst aboutUsSchema = new Schema<AboutUsDocument>({\r\n  headerImage: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  whoWeAre: {\r\n    title: {\r\n      type: String,\r\n      default: 'Who We Are',\r\n    },\r\n    description: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    images: [\r\n      {\r\n        type: String,\r\n      },\r\n    ],\r\n  },\r\n  ourValues: {\r\n    title: {\r\n      type: String,\r\n      default: 'Our Values',\r\n    },\r\n    description: {\r\n      type: String,\r\n    },\r\n    values: [\r\n      {\r\n        icon: String,\r\n        title: String,\r\n      },\r\n    ],\r\n  },\r\n  ourJourney: {\r\n    title: {\r\n      type: String,\r\n      default: 'Our Journey',\r\n    },\r\n    description: {\r\n      type: String,\r\n    },\r\n    milestones: [\r\n      {\r\n        icon: String,\r\n        description: String,\r\n        year: String,\r\n      },\r\n    ],\r\n  },\r\n  awardsAndAchievements: {\r\n    title: {\r\n      type: String,\r\n      default: 'Awards & Achievements',\r\n    },\r\n    awards: [\r\n      {\r\n        image: String,\r\n        title: String,\r\n      },\r\n    ],\r\n  },\r\n  navigationButtons: [\r\n    {\r\n      label: String,\r\n      link: String,\r\n    },\r\n  ],\r\n  createdAt: {\r\n    type: Date,\r\n    default: Date.now,\r\n  },\r\n  updatedAt: {\r\n    type: Date,\r\n    default: Date.now,\r\n  },\r\n});\r\n\r\n// Update `updatedAt` timestamp on save\r\naboutUsSchema.pre('save', function (next) {\r\n  this.updatedAt = new Date();\r\n  next();\r\n});\r\n\r\n// Create or reuse the model\r\nconst AboutUs = mongoose.models.Aboutpage || mongoose.model<AboutUsDocument>('Aboutpage', aboutUsSchema);\r\n\r\nexport default AboutUs;"],"names":[],"mappings":";;;AAAA;;AAqDA,6BAA6B;AAC7B,MAAM,gBAAgB,IAAI,yGAAA,CAAA,SAAM,CAAkB;IAChD,aAAa;QACX,MAAM;QACN,UAAU;IACZ;IACA,UAAU;QACR,OAAO;YACL,MAAM;YACN,SAAS;QACX;QACA,aAAa;YACX,MAAM;YACN,UAAU;QACZ;QACA,QAAQ;YACN;gBACE,MAAM;YACR;SACD;IACH;IACA,WAAW;QACT,OAAO;YACL,MAAM;YACN,SAAS;QACX;QACA,aAAa;YACX,MAAM;QACR;QACA,QAAQ;YACN;gBACE,MAAM;gBACN,OAAO;YACT;SACD;IACH;IACA,YAAY;QACV,OAAO;YACL,MAAM;YACN,SAAS;QACX;QACA,aAAa;YACX,MAAM;QACR;QACA,YAAY;YACV;gBACE,MAAM;gBACN,aAAa;gBACb,MAAM;YACR;SACD;IACH;IACA,uBAAuB;QACrB,OAAO;YACL,MAAM;YACN,SAAS;QACX;QACA,QAAQ;YACN;gBACE,OAAO;gBACP,OAAO;YACT;SACD;IACH;IACA,mBAAmB;QACjB;YACE,OAAO;YACP,MAAM;QACR;KACD;IACD,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;IACA,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;AACF;AAEA,uCAAuC;AACvC,cAAc,GAAG,CAAC,QAAQ,SAAU,IAAI;IACtC,IAAI,CAAC,SAAS,GAAG,IAAI;IACrB;AACF;AAEA,4BAA4B;AAC5B,MAAM,UAAU,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,SAAS,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAkB,aAAa;uCAE3E","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Keval/VrajeshRndTechnosoft/sabecho-v2/app/api/v1/aboutus/route.ts"],"sourcesContent":["// File: app/api/about/route.ts (Next.js 13+ with TypeScript)\r\n\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport path from \"path\";\r\nimport fs from \"fs/promises\";\r\nimport {connectDb} from \"@/lib/db\";\r\nimport AboutUs from \"@/models/home/About\";\r\n\r\nexport async function GET() {\r\n  try {\r\n    await connectDb();\r\n    const aboutUs = await AboutUs.findOne().sort({ createdAt: -1 });\r\n    if (!aboutUs) {\r\n      return NextResponse.json({ message: \"About Us content not found\" }, { status: 404 });\r\n    }\r\n    return NextResponse.json(aboutUs);\r\n  } catch (error) {\r\n    return NextResponse.json({ message: \"Server error\", error: (error as Error).message }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    await connectDb();\r\n    const formData = await req.formData();\r\n    const data = JSON.parse(formData.get(\"data\") as string);\r\n\r\n    // Handle headerImage\r\n    const headerImageFile = formData.get(\"headerImage\") as File;\r\n    if (headerImageFile instanceof File) {\r\n      const buffer = Buffer.from(await headerImageFile.arrayBuffer());\r\n      const filename = `headerImage-${Date.now()}${path.extname(headerImageFile.name)}`;\r\n      const filePath = path.join(process.cwd(), \"uploads\", filename);\r\n      await fs.writeFile(filePath, buffer);\r\n      data.headerImage = filename;\r\n    }\r\n\r\n    // Handle whoWeAreImages\r\n    const whoWeAreImages: string[] = [];\r\n    for (const entry of formData.entries()) {\r\n      const [key, value] = entry;\r\n      if (key === \"whoWeAreImages\" && value instanceof File) {\r\n        const buffer = Buffer.from(await value.arrayBuffer());\r\n        const filename = `whoWeAre-${Date.now()}-${Math.random()}${path.extname(value.name)}`;\r\n        const filePath = path.join(process.cwd(), \"uploads\", filename);\r\n        await fs.writeFile(filePath, buffer);\r\n        whoWeAreImages.push(filename);\r\n      }\r\n    }\r\n    if (!data.whoWeAre) data.whoWeAre = {};\r\n    data.whoWeAre.images = whoWeAreImages;\r\n\r\n    // Handle awardImages\r\n    const awards = data.awardsAndAchievements?.awards || [];\r\n    const updatedAwards = [];\r\n    let index = 0;\r\n    for (const entry of formData.entries()) {\r\n      const [key, value] = entry;\r\n      if (key === \"awardImages\" && value instanceof File) {\r\n        const buffer = Buffer.from(await value.arrayBuffer());\r\n        const filename = `award-${Date.now()}-${Math.random()}${path.extname(value.name)}`;\r\n        const filePath = path.join(process.cwd(), \"uploads\", filename);\r\n        await fs.writeFile(filePath, buffer);\r\n\r\n        if (awards[index]) {\r\n          updatedAwards.push({ ...awards[index], image: filename });\r\n        }\r\n        index++;\r\n      }\r\n    }\r\n    data.awardsAndAchievements = { ...data.awardsAndAchievements, awards: updatedAwards };\r\n\r\n    const updatedAboutUs = await AboutUs.findOneAndUpdate(\r\n      {},\r\n      { ...data, updatedAt: Date.now() },\r\n      { new: true, upsert: true, runValidators: true, setDefaultsOnInsert: true }\r\n    );\r\n\r\n    return NextResponse.json(updatedAboutUs, { status: 201 });\r\n  } catch (error) {\r\n    const err = error as Error;\r\n    const status = err.name === \"ValidationError\" ? 400 : 500;\r\n    return NextResponse.json({ message: err.message }, { status });\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}