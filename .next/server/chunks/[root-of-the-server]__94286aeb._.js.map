{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Keval/VrajeshRndTechnosoft/sabecho-v2/lib/db.ts"],"sourcesContent":["import mongoose, { ConnectOptions } from \"mongoose\";\r\n\r\nconst options: ConnectOptions = {\r\n  serverSelectionTimeoutMS: 5000,\r\n  connectTimeoutMS: 10000,\r\n  socketTimeoutMS: 45000,\r\n  retryWrites: true,\r\n};\r\n\r\n// Keep track of the connection status\r\nlet isConnected = false;\r\n\r\nconst connectDb = async (): Promise<void> => {\r\n  if (isConnected) {\r\n    // Already connected\r\n    return;\r\n  }\r\n\r\n  try {\r\n    await mongoose.connect(process.env.MONGODB_URI as string, options);\r\n    isConnected = true;\r\n    console.log(\"Connected to MongoDB\");\r\n  } catch (err) {\r\n    console.log(`DB connection error - ${err}`);\r\n    throw err;\r\n  }\r\n};\r\n\r\nconst closeDbConnection = async (): Promise<void> => {\r\n  try {\r\n    await mongoose.connection.close();\r\n    isConnected = false;\r\n    console.log(\"MongoDB connection closed\");\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport { connectDb, closeDbConnection };\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,UAA0B;IAC9B,0BAA0B;IAC1B,kBAAkB;IAClB,iBAAiB;IACjB,aAAa;AACf;AAEA,sCAAsC;AACtC,IAAI,cAAc;AAElB,MAAM,YAAY;IAChB,IAAI,aAAa;QACf,oBAAoB;QACpB;IACF;IAEA,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAY;QAC1D,cAAc;QACd,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,KAAK;QACZ,QAAQ,GAAG,CAAC,CAAC,sBAAsB,EAAE,KAAK;QAC1C,MAAM;IACR;AACF;AAEA,MAAM,oBAAoB;IACxB,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,UAAU,CAAC,KAAK;QAC/B,cAAc;QACd,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC;IAChB;AACF","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Keval/VrajeshRndTechnosoft/sabecho-v2/models/home/WhyChoose.ts"],"sourcesContent":["// lib/models/WhyChoose.ts\r\nimport mongoose, { Document, Schema } from 'mongoose';\r\n\r\n// TypeScript interface\r\ninterface WhyChoose {\r\n  _id: string;\r\n  userType: string;\r\n  image: string;\r\n  imageAlt: string;\r\n  title: string;\r\n  description: string;\r\n  metaTitle?: string;\r\n  metaDescription?: string;\r\n  keywords: string[];\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\ninterface WhyChooseDocument extends Document, WhyChoose {}\r\n\r\nconst whyChooseSchema = new Schema<WhyChooseDocument>(\r\n  {\r\n    userType: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    image: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    imageAlt: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    title: {\r\n      type: String,\r\n      required: true,\r\n      trim: true,\r\n    },\r\n    description: {\r\n      type: String,\r\n      required: true,\r\n      trim: true,\r\n    },\r\n    metaTitle: {\r\n      type: String,\r\n      trim: true,\r\n    },\r\n    metaDescription: {\r\n      type: String,\r\n      trim: true,\r\n    },\r\n    keywords: [\r\n      {\r\n        type: String,\r\n        trim: true,\r\n      },\r\n    ],\r\n  },\r\n  { timestamps: true },\r\n);\r\n\r\nconst WhyChoose = mongoose.models.WhyChoose || mongoose.model<WhyChooseDocument>('WhyChoose', whyChooseSchema);\r\n\r\nexport default WhyChoose;"],"names":[],"mappings":"AAAA,0BAA0B;;;;AAC1B;;AAmBA,MAAM,kBAAkB,IAAI,yGAAA,CAAA,SAAM,CAChC;IACE,UAAU;QACR,MAAM;QACN,UAAU;IACZ;IACA,OAAO;QACL,MAAM;QACN,UAAU;IACZ;IACA,UAAU;QACR,MAAM;QACN,UAAU;IACZ;IACA,OAAO;QACL,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,aAAa;QACX,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,WAAW;QACT,MAAM;QACN,MAAM;IACR;IACA,iBAAiB;QACf,MAAM;QACN,MAAM;IACR;IACA,UAAU;QACR;YACE,MAAM;YACN,MAAM;QACR;KACD;AACH,GACA;IAAE,YAAY;AAAK;AAGrB,MAAM,YAAY,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,SAAS,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAoB,aAAa;uCAE/E","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Keval/VrajeshRndTechnosoft/sabecho-v2/app/api/v1/why-choose/route.ts"],"sourcesContent":["// File: app/api/why-choose/route.ts (Next.js 13+)\r\n\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport path from \"path\";\r\nimport fs from \"fs/promises\";\r\nimport { connectDb } from \"@/lib/db\";\r\nimport WhyChoose from \"@/models/home/WhyChoose\";\r\n\r\nexport async function GET() {\r\n  try {\r\n    await connectDb();\r\n    const items = await WhyChoose.find();\r\n    return NextResponse.json(items);\r\n  } catch (error) {\r\n    return NextResponse.json({ message: (error as Error).message }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    await connectDb();\r\n    const formData = await req.formData();\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const newItemData: any = {};\r\n\r\n    formData.forEach(async (value, key) => {\r\n      if (key === \"image\" && value instanceof File) {\r\n        const filename = Date.now() + path.extname(value.name);\r\n        const buffer = Buffer.from(await value.arrayBuffer());\r\n        const filepath = path.join(process.cwd(), \"uploads\", filename);\r\n        fs.writeFile(filepath, buffer);\r\n        newItemData.image = filename;\r\n      } else if (key === \"keywords\") {\r\n        newItemData.keywords = JSON.parse(value as string);\r\n      } else {\r\n        newItemData[key] = value;\r\n      }\r\n    });\r\n\r\n    const newItem = new WhyChoose(newItemData);\r\n    await newItem.save();\r\n    return NextResponse.json(newItem, { status: 201 });\r\n  } catch (error) {\r\n    return NextResponse.json({ message: (error as Error).message }, { status: 400 });\r\n  }\r\n}"],"names":[],"mappings":"AAAA,kDAAkD;;;;;AAElD;AACA;AACA;AACA;AACA;;;;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,CAAA,GAAA,2GAAA,CAAA,YAAS,AAAD;QACd,MAAM,QAAQ,MAAM,6HAAA,CAAA,UAAS,CAAC,IAAI;QAClC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS,AAAC,MAAgB,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAChF;AACF;AAEO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,CAAA,GAAA,2GAAA,CAAA,YAAS,AAAD;QACd,MAAM,WAAW,MAAM,IAAI,QAAQ;QACnC,8DAA8D;QAC9D,MAAM,cAAmB,CAAC;QAE1B,SAAS,OAAO,CAAC,OAAO,OAAO;YAC7B,IAAI,QAAQ,WAAW,iBAAiB,MAAM;gBAC5C,MAAM,WAAW,KAAK,GAAG,KAAK,iGAAA,CAAA,UAAI,CAAC,OAAO,CAAC,MAAM,IAAI;gBACrD,MAAM,SAAS,OAAO,IAAI,CAAC,MAAM,MAAM,WAAW;gBAClD,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,WAAW;gBACrD,qHAAA,CAAA,UAAE,CAAC,SAAS,CAAC,UAAU;gBACvB,YAAY,KAAK,GAAG;YACtB,OAAO,IAAI,QAAQ,YAAY;gBAC7B,YAAY,QAAQ,GAAG,KAAK,KAAK,CAAC;YACpC,OAAO;gBACL,WAAW,CAAC,IAAI,GAAG;YACrB;QACF;QAEA,MAAM,UAAU,IAAI,6HAAA,CAAA,UAAS,CAAC;QAC9B,MAAM,QAAQ,IAAI;QAClB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS;YAAE,QAAQ;QAAI;IAClD,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS,AAAC,MAAgB,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAChF;AACF","debugId":null}}]
}