{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Keval/VrajeshRndTechnosoft/sabecho-v2/lib/db.ts"],"sourcesContent":["import mongoose, { ConnectOptions } from \"mongoose\";\r\n\r\nconst options: ConnectOptions = {\r\n  serverSelectionTimeoutMS: 5000,\r\n  connectTimeoutMS: 10000,\r\n  socketTimeoutMS: 45000,\r\n  retryWrites: true,\r\n};\r\n\r\n// Keep track of the connection status\r\nlet isConnected = false;\r\n\r\nconst connectDb = async (): Promise<void> => {\r\n  if (isConnected) {\r\n    // Already connected\r\n    return;\r\n  }\r\n\r\n  try {\r\n    await mongoose.connect(process.env.MONGODB_URI as string, options);\r\n    isConnected = true;\r\n    console.log(\"Connected to MongoDB\");\r\n  } catch (err) {\r\n    console.log(`DB connection error - ${err}`);\r\n    throw err;\r\n  }\r\n};\r\n\r\nconst closeDbConnection = async (): Promise<void> => {\r\n  try {\r\n    await mongoose.connection.close();\r\n    isConnected = false;\r\n    console.log(\"MongoDB connection closed\");\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport { connectDb, closeDbConnection };\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,UAA0B;IAC9B,0BAA0B;IAC1B,kBAAkB;IAClB,iBAAiB;IACjB,aAAa;AACf;AAEA,sCAAsC;AACtC,IAAI,cAAc;AAElB,MAAM,YAAY;IAChB,IAAI,aAAa;QACf,oBAAoB;QACpB;IACF;IAEA,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAY;QAC1D,cAAc;QACd,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,KAAK;QACZ,QAAQ,GAAG,CAAC,CAAC,sBAAsB,EAAE,KAAK;QAC1C,MAAM;IACR;AACF;AAEA,MAAM,oBAAoB;IACxB,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,UAAU,CAAC,KAAK;QAC/B,cAAc;QACd,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC;IAChB;AACF","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Keval/VrajeshRndTechnosoft/sabecho-v2/models/home/ExploreCategory.ts"],"sourcesContent":["// lib/models/ExploreCategory.ts\r\nimport mongoose, { Document, Schema } from 'mongoose';\r\n\r\n// TypeScript interface\r\ninterface ExploreCategory {\r\n  title: string;\r\n  slug: string;\r\n  image: {\r\n    url: string;\r\n    altText: string;\r\n  };\r\n  productNames: string[];\r\n  metaDescription?: string;\r\n  keywords: string[];\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\ninterface ExploreCategoryDocument extends Document, ExploreCategory {}\r\n\r\nconst exploreCategorySchema = new Schema<ExploreCategoryDocument>(\r\n  {\r\n    title: {\r\n      type: String,\r\n      required: true,\r\n      trim: true,\r\n      maxlength: 100,\r\n    },\r\n    slug: {\r\n      type: String,\r\n      required: true,\r\n      unique: true,\r\n      lowercase: true,\r\n      trim: true,\r\n    },\r\n    image: {\r\n      url: {\r\n        type: String,\r\n        required: true,\r\n      },\r\n      altText: {\r\n        type: String,\r\n        required: true,\r\n        maxlength: 100,\r\n      },\r\n    },\r\n    productNames: [\r\n      {\r\n        type: String,\r\n        trim: true,\r\n      },\r\n    ],\r\n    metaDescription: {\r\n      type: String,\r\n      maxlength: 160,\r\n    },\r\n    keywords: [\r\n      {\r\n        type: String,\r\n        trim: true,\r\n      },\r\n    ],\r\n  },\r\n  { timestamps: true },\r\n);\r\n\r\n// Create text index for search\r\nexploreCategorySchema.index({\r\n  title: 'text',\r\n  productNames: 'text',\r\n  metaDescription: 'text',\r\n  keywords: 'text',\r\n});\r\n\r\n// Pre-save hook to generate slug\r\nexploreCategorySchema.pre('save', function (next) {\r\n  if (!this.slug) {\r\n    this.slug = this.title.toLowerCase().replace(/[^a-zA-Z0-9]+/g, '-');\r\n  }\r\n  next();\r\n});\r\n\r\nconst ExploreCategory = mongoose.models.ExploreCategory || mongoose.model<ExploreCategoryDocument>('ExploreCategory', exploreCategorySchema);\r\n\r\nexport default ExploreCategory;\r\n"],"names":[],"mappings":"AAAA,gCAAgC;;;;AAChC;;AAmBA,MAAM,wBAAwB,IAAI,yGAAA,CAAA,SAAM,CACtC;IACE,OAAO;QACL,MAAM;QACN,UAAU;QACV,MAAM;QACN,WAAW;IACb;IACA,MAAM;QACJ,MAAM;QACN,UAAU;QACV,QAAQ;QACR,WAAW;QACX,MAAM;IACR;IACA,OAAO;QACL,KAAK;YACH,MAAM;YACN,UAAU;QACZ;QACA,SAAS;YACP,MAAM;YACN,UAAU;YACV,WAAW;QACb;IACF;IACA,cAAc;QACZ;YACE,MAAM;YACN,MAAM;QACR;KACD;IACD,iBAAiB;QACf,MAAM;QACN,WAAW;IACb;IACA,UAAU;QACR;YACE,MAAM;YACN,MAAM;QACR;KACD;AACH,GACA;IAAE,YAAY;AAAK;AAGrB,+BAA+B;AAC/B,sBAAsB,KAAK,CAAC;IAC1B,OAAO;IACP,cAAc;IACd,iBAAiB;IACjB,UAAU;AACZ;AAEA,iCAAiC;AACjC,sBAAsB,GAAG,CAAC,QAAQ,SAAU,IAAI;IAC9C,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC,kBAAkB;IACjE;IACA;AACF;AAEA,MAAM,kBAAkB,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,eAAe,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAA0B,mBAAmB;uCAEvG","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Keval/VrajeshRndTechnosoft/sabecho-v2/app/api/v1/explore-categories/route.ts"],"sourcesContent":["// File: app/api/explore-category/route.ts \r\nimport { NextResponse } from \"next/server\";\r\nimport { connectDb } from \"@/lib/db\";\r\nimport ExploreCategory from \"@/models/home/ExploreCategory\";\r\n\r\nexport async function GET() {\r\n  try {\r\n    await connectDb();\r\n    const categories = await ExploreCategory.find();\r\n    return NextResponse.json(categories);\r\n  } catch (error) {\r\n    return NextResponse.json({ message: (error as Error).message }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,2CAA2C;;;;AAC3C;AACA;AACA;;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,CAAA,GAAA,2GAAA,CAAA,YAAS,AAAD;QACd,MAAM,aAAa,MAAM,mIAAA,CAAA,UAAe,CAAC,IAAI;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS,AAAC,MAAgB,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAChF;AACF","debugId":null}}]
}