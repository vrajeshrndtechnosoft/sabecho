{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Keval/VrajeshRndTechnosoft/sabecho-v2/app/%28orders%29/negotiation/%5Bid%5D/page.tsx"],"sourcesContent":["\r\n\"use client\"\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\nimport { toast } from 'sonner';\r\nimport { \r\n  Package, \r\n  Loader2, \r\n  AlertCircle,\r\n  Calendar,\r\n  Percent,\r\n  Truck,\r\n  MessageSquare,\r\n  User,\r\n  Mail,\r\n  Phone,\r\n  X,\r\n  Search,\r\n  Hash,\r\n  IndianRupee,\r\n  CheckCircle,\r\n  Send\r\n} from 'lucide-react';\r\n\r\n// Utility Components\r\nconst Input = ({ value, onChange, placeholder, className = \"\", type = \"text\", ...props }: any) => {\r\n  if (props.withSearch) {\r\n    return (\r\n      <div className=\"relative\">\r\n        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\r\n        <input\r\n          type={type}\r\n          value={value}\r\n          onChange={onChange}\r\n          placeholder={placeholder}\r\n          className={`pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 w-full ${className}`}\r\n          {...props}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <input\r\n      type={type}\r\n      value={value}\r\n      onChange={onChange}\r\n      placeholder={placeholder}\r\n      className={`px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 w-full ${className}`}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst Button = ({ onClick, children, className = \"\", variant = \"primary\", disabled = false, ...props }: any) => {\r\n  const baseClasses = \"px-4 py-2 rounded-md transition-colors focus:outline-none focus:ring-2\";\r\n  const variants = {\r\n    primary: \"bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500\",\r\n    outline: \"border border-gray-300 text-gray-700 hover:bg-gray-100 focus:ring-gray-500\",\r\n    ghost: \"text-gray-500 hover:text-gray-700 hover:bg-gray-100\"\r\n  };\r\n  \r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      className={`${baseClasses} ${variants[variant]} ${disabled ? 'opacity-50 cursor-not-allowed' : ''} ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst Badge = ({ children, variant = \"default\", className = \"\" }: any) => {\r\n  const variants = {\r\n    default: \"bg-gray-100 text-gray-800\",\r\n    pending: \"bg-yellow-100 text-yellow-800\",\r\n    accepted: \"bg-green-100 text-green-800\",\r\n    rejected: \"bg-red-100 text-red-800\"\r\n  };\r\n  \r\n  return (\r\n    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${variants[variant]} ${className}`}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nconst Label = ({ htmlFor, children, className = \"\" }: any) => (\r\n  <label htmlFor={htmlFor} className={`block text-sm font-medium text-gray-700 ${className}`}>\r\n    {children}\r\n  </label>\r\n);\r\n\r\nconst Card = ({ children, className = \"\" }: any) => (\r\n  <div className={`bg-white border border-gray-200 rounded-lg shadow-sm ${className}`}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst CardHeader = ({ children, className = \"\" }: any) => (\r\n  <div className={`px-6 py-4 ${className}`}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst CardTitle = ({ children, className = \"\" }: any) => (\r\n  <h3 className={`text-lg font-semibold ${className}`}>\r\n    {children}\r\n  </h3>\r\n);\r\n\r\nconst CardContent = ({ children, className = \"\" }: any) => (\r\n  <div className={`px-6 py-4 ${className}`}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst Textarea = ({ value, onChange, placeholder, className = \"\", rows = 3, ...props }: any) => (\r\n  <textarea\r\n    value={value}\r\n    onChange={onChange}\r\n    placeholder={placeholder}\r\n    rows={rows}\r\n    className={`px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 w-full resize-vertical ${className}`}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst InfoRow = ({ icon, label, value }: any) => (\r\n  <div className=\"flex items-center mb-2\">\r\n    {icon}\r\n    <span className=\"font-semibold mr-2 ml-2\">{label}:</span>\r\n    <span className=\"text-gray-700\">{value || 'N/A'}</span>\r\n  </div>\r\n);\r\n\r\n// Interfaces\r\ninterface User {\r\n  email: string;\r\n  name: string;\r\n  mobile: string;\r\n  companyName?: string;\r\n  userType: string;\r\n}\r\n\r\ninterface Requirement {\r\n  _id: string;\r\n  status: string;\r\n  name: string;\r\n  minQty: number;\r\n  measurement: string;\r\n  amount: number;\r\n  description: string;\r\n  company: string;\r\n  pincode: string;\r\n  reqId: string;\r\n  buyer_email: string;\r\n  mobile: string;\r\n  hsnCode: string;\r\n  gstPercentage: number;\r\n  created_at: string;\r\n  __v: number;\r\n  specification?: string;\r\n  pid?: number;\r\n}\r\n\r\ninterface NegotiationData {\r\n  _id: string;\r\n  status: string;\r\n  productName: string;\r\n  amount: number;\r\n  buyer_email: string;\r\n  commission: number;\r\n  company: string;\r\n  created_at: string;\r\n  description: string;\r\n  gstPercentage: number;\r\n  measurement: string;\r\n  minQty: number;\r\n  mobile: string;\r\n  negotiation: Array<{\r\n    negId: string;\r\n    yourAmount: number;\r\n    yourQty: number;\r\n    previewAmount: number;\r\n    previewQty: number;\r\n    deliveryRelatedInfo: string;\r\n    messages: string;\r\n    createdAt: string;\r\n  }>;\r\n  pid: number;\r\n  pincode: string;\r\n  reqId: string;\r\n  seller_email: string;\r\n  hsnCode: string;\r\n  __v: number;\r\n}\r\n\r\ninterface NegotiationFormData {\r\n  percentage: number | '';\r\n  quantity: number | '';\r\n  deliveryInfo: string;\r\n  additionalInfo: string;\r\n}\r\n\r\ninterface ValidationErrors {\r\n  percentage?: string;\r\n  quantity?: string;\r\n  deliveryInfo?: string;\r\n}\r\n\r\n// Negotiation Card Component\r\nconst NegotiationCard = ({ data, onClose, onSendNegotiation, onUpdateStatus, onSendToCustomer }: any) => {\r\n  const [newAmount, setNewAmount] = useState('');\r\n  const [newStatus, setNewStatus] = useState(data.status);\r\n  const negotiation = data.negotiation?.[0] || {};\r\n\r\n  const handleSendNegotiation = () => {\r\n    const negotiationData = {\r\n      productDetails: {\r\n        productName: data.productName,\r\n        productId: data.pid,\r\n        hsnCode: data.hsnCode,\r\n        measurement: data.measurement,\r\n        gst: `${data.gstPercentage}%`\r\n      },\r\n      sellerInfo: {\r\n        email: data.seller_email\r\n      },\r\n      requestInfo: {\r\n        requestId: data.reqId,\r\n        createdAt: data.created_at\r\n      },\r\n      negotiationDetails: {\r\n        negotiationId: negotiation.negId || '',\r\n        negotiationAmount: newAmount ? Number(newAmount) : negotiation.yourAmount || 0,\r\n        negotiationQuantity: negotiation.yourQty || 0,\r\n        previewAmount: negotiation.previewAmount || 0,\r\n        previewQuantity: negotiation.previewQty || 0\r\n      },\r\n      additionalInfo: {\r\n        deliveryInfo: negotiation.deliveryRelatedInfo || '',\r\n        description: data.description || ''\r\n      },\r\n      status: newStatus\r\n    };\r\n\r\n    onSendNegotiation(negotiationData);\r\n  };\r\n\r\n  const handleStatusUpdate = () => {\r\n    onUpdateStatus(data._id, newStatus);\r\n  };\r\n\r\n  const handleSendToCustomer = () => {\r\n    onSendToCustomer(data._id, newAmount ? Number(newAmount) : negotiation.yourAmount || 0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-lg p-6 max-w-2xl w-full max-h-[90vh] overflow-y-auto relative\">\r\n        <button onClick={onClose} className=\"absolute top-4 right-4 text-gray-500 hover:text-gray-700\">\r\n          <X className=\"w-6 h-6\" />\r\n        </button>\r\n        <h2 className=\"text-2xl font-bold mb-4\">{data.productName || 'N/A'}</h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div>\r\n            <InfoRow icon={<Package className=\"w-5 h-5\" />} label=\"Product ID\" value={data.pid} />\r\n            <InfoRow icon={<Hash className=\"w-5 h-5\" />} label=\"HSN Code\" value={data.hsnCode} />\r\n            <InfoRow icon={<IndianRupee className=\"w-5 h-5\" />} label=\"Amount\" value={`â‚¹${data.amount || 0}`} />\r\n            <InfoRow icon={<Package className=\"w-5 h-5\" />} label=\"Min Quantity\" value={data.minQty} />\r\n            <InfoRow icon={<IndianRupee className=\"w-5 h-5\" />} label=\"Commission\" value={`${data.commission || 0}%`} />\r\n            <InfoRow icon={<Package className=\"w-5 h-5\" />} label=\"Measurement\" value={data.measurement} />\r\n            <InfoRow icon={<IndianRupee className=\"w-5 h-5\" />} label=\"GST\" value={`${data.gstPercentage || 0}%`} />\r\n          </div>\r\n          <div>\r\n            <InfoRow icon={<Mail className=\"w-5 h-5\" />} label=\"Seller Email\" value={data.seller_email} />\r\n            <InfoRow icon={<Mail className=\"w-5 h-5\" />} label=\"Buyer Email\" value={data.buyer_email} />\r\n            <InfoRow icon={<Hash className=\"w-5 h-5\" />} label=\"Request ID\" value={data.reqId} />\r\n            <InfoRow icon={<Package className=\"w-5 h-5\" />} label=\"Company\" value={data.company} />\r\n            <InfoRow icon={<Hash className=\"w-5 h-5\" />} label=\"Pincode\" value={data.pincode} />\r\n            <InfoRow icon={<Hash className=\"w-5 h-5\" />} label=\"Mobile\" value={data.mobile} />\r\n            <InfoRow icon={<Calendar className=\"w-5 h-5\" />} label=\"Created At\" value={data.created_at ? new Date(data.created_at).toLocaleString() : 'N/A'} />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mt-6\">\r\n          <h3 className=\"text-xl font-semibold mb-3\">Negotiation Details</h3>\r\n          <div className=\"bg-gray-100 p-4 rounded-md\">\r\n            <InfoRow icon={<Hash className=\"w-5 h-5\" />} label=\"Negotiation ID\" value={negotiation.negId} />\r\n            <InfoRow icon={<IndianRupee className=\"w-5 h-5\" />} label=\"Negotiation Amount\" value={`â‚¹${negotiation.yourAmount || 0}`} />\r\n            <InfoRow icon={<Package className=\"w-5 h-5\" />} label=\"Negotiation Quantity\" value={negotiation.yourQty || 0} />\r\n            <InfoRow icon={<IndianRupee className=\"w-5 h-5\" />} label=\"Preview Amount\" value={`â‚¹${negotiation.previewAmount || 0}`} />\r\n            <InfoRow icon={<Package className=\"w-5 h-5\" />} label=\"Preview Quantity\" value={negotiation.previewQty || 0} />\r\n            <InfoRow icon={<Truck className=\"w-5 h-5\" />} label=\"Delivery Info\" value={negotiation.deliveryRelatedInfo} />\r\n            <InfoRow icon={<MessageSquare className=\"w-5 h-5\" />} label=\"Messages\" value={negotiation.messages} />\r\n            <InfoRow icon={<Calendar className=\"w-5 h-5\" />} label=\"Created At\" value={negotiation.createdAt ? new Date(negotiation.createdAt).toLocaleString() : 'N/A'} />\r\n            \r\n            <div className=\"mt-4\">\r\n              <Label htmlFor=\"newAmount\">New Negotiation Amount</Label>\r\n              <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <IndianRupee className=\"h-5 w-5 text-gray-400\" />\r\n                </div>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={newAmount}\r\n                  onChange={(e: any) => setNewAmount(e.target.value)}\r\n                  placeholder=\"Enter new amount\"\r\n                  className=\"pl-10\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mt-6\">\r\n          <h3 className=\"text-xl font-semibold mb-2\">Status Update</h3>\r\n          <div className=\"flex items-center space-x-4\">\r\n            <select\r\n              value={newStatus}\r\n              onChange={(e: any) => setNewStatus(e.target.value)}\r\n              className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md\"\r\n            >\r\n              <option value=\"pending\">Pending</option>\r\n              <option value=\"accepted\">Accepted</option>\r\n              <option value=\"rejected\">Rejected</option>\r\n            </select>\r\n            <Button onClick={handleStatusUpdate} className=\"flex items-center\">\r\n              <CheckCircle className=\"w-5 h-5 mr-2\" /> Update Status\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6 flex justify-between items-center\">\r\n          <Button onClick={handleSendNegotiation} className=\"flex items-center\">\r\n            <Send className=\"w-5 h-5 mr-2\" /> Send Negotiation\r\n          </Button>\r\n          <Button onClick={handleSendToCustomer} className=\"flex items-center\">\r\n            <Mail className=\"w-5 h-5 mr-2\" /> Send to Customer\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NegotiationDialog = () => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [requirement, setRequirement] = useState<Requirement | null>(null);\r\n  const [negotiationData, setNegotiationData] = useState<NegotiationData[]>([]);\r\n  const [selectedNegotiation, setSelectedNegotiation] = useState<NegotiationData | null>(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [formData, setFormData] = useState<NegotiationFormData>({\r\n    percentage: '',\r\n    quantity: '',\r\n    deliveryInfo: '',\r\n    additionalInfo: '',\r\n  });\r\n  const [validationErrors, setValidationErrors] = useState<ValidationErrors>({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [showNegotiationList, setShowNegotiationList] = useState(false);\r\n  \r\n  const API_URL = \"http://localhost:3033\";\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n\r\n  const reqId = searchParams.get('id');\r\n\r\n  const currentDate = new Date().toLocaleString('en-IN', {\r\n    timeZone: 'Asia/Kolkata',\r\n    dateStyle: 'medium',\r\n    timeStyle: 'short',\r\n  });\r\n\r\n  const getCookie = (name: string): string | null => {\r\n    if (typeof document === 'undefined') return null;\r\n    const value = `; ${document.cookie}`;\r\n    const parts = value.split(`; ${name}=`);\r\n    if (parts.length === 2) return parts.pop()?.split(';').shift() || null;\r\n    return null;\r\n  };\r\n\r\n  const fetchNegotiationData = useCallback(async () => {\r\n    try {\r\n      const token = getCookie('token');\r\n      if (!token) {\r\n        throw new Error('Authentication required. Please login again.');\r\n      }\r\n\r\n      const response = await fetch(`${API_URL}/api/v1/negotiationAll`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({ message: 'Failed to fetch negotiation data' }));\r\n        throw new Error(errorData.message || 'Failed to fetch negotiation data');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setNegotiationData(Array.isArray(data) ? data : []);\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Failed to fetch negotiation data';\r\n      console.error('Negotiation data fetch error:', err);\r\n      toast.error(errorMessage);\r\n    }\r\n  }, [API_URL]);\r\n\r\n  const fetchRequirement = useCallback(async (id: string, token: string) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/api/v1/requirements/reqId/${id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({ message: `Failed to fetch requirement ${id}` }));\r\n        throw new Error(errorData.message || `Failed to fetch requirement ${id}`);\r\n      }\r\n\r\n      const requirementData = await response.json();\r\n      setRequirement(requirementData);\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Failed to fetch requirement';\r\n      throw new Error(errorMessage);\r\n    }\r\n  }, [API_URL]);\r\n\r\n  const verifyTokenAndFetchData = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const token = getCookie('token');\r\n      const userType = getCookie('userType');\r\n      \r\n      if (!token) {\r\n        throw new Error('Authentication required. Please login again.');\r\n      }\r\n\r\n      const tokenResponse = await fetch(`${API_URL}/api/v1/verifyToken`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ token }),\r\n      });\r\n\r\n      if (!tokenResponse.ok) {\r\n        const errorData = await tokenResponse.json().catch(() => ({ message: 'Token verification failed' }));\r\n        throw new Error(errorData.message || 'Token verification failed');\r\n      }\r\n\r\n      const tokenData = await tokenResponse.json();\r\n      if (tokenData.user) {\r\n        setUser({ ...tokenData.user, userType: userType || 'buyer' });\r\n      }\r\n\r\n      await fetchNegotiationData();\r\n\r\n      if (reqId) {\r\n        await fetchRequirement(reqId, token);\r\n      } else {\r\n        setShowNegotiationList(true);\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'An error occurred';\r\n      setError(errorMessage);\r\n      toast.error(errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [reqId, fetchRequirement, fetchNegotiationData, API_URL]);\r\n\r\n  useEffect(() => {\r\n    verifyTokenAndFetchData();\r\n  }, [verifyTokenAndFetchData]);\r\n\r\n  const validateForm = () => {\r\n    const errors: ValidationErrors = {};\r\n    \r\n    if (!formData.percentage || formData.percentage <= 0 || formData.percentage > 100) {\r\n      errors.percentage = 'Please enter a valid percentage between 1 and 100';\r\n    }\r\n    \r\n    if (!formData.quantity || formData.quantity <= 0) {\r\n      errors.quantity = 'Please enter a valid quantity greater than 0';\r\n    }\r\n    \r\n    if (!formData.deliveryInfo.trim()) {\r\n      errors.deliveryInfo = 'Delivery information is required';\r\n    } else if (formData.deliveryInfo.trim().length < 10) {\r\n      errors.deliveryInfo = 'Please provide more detailed delivery information (minimum 10 characters)';\r\n    }\r\n\r\n    setValidationErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    \r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: name === 'percentage' || name === 'quantity' ? (value ? Number(value) : '') : value,\r\n    }));\r\n\r\n    if (validationErrors[name as keyof ValidationErrors]) {\r\n      setValidationErrors(prev => ({\r\n        ...prev,\r\n        [name]: undefined\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmitNegotiation = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    if (submitting) return;\r\n\r\n    if (!validateForm()) {\r\n      toast.error('Please fix the validation errors before submitting');\r\n      return;\r\n    }\r\n\r\n    if (!requirement) {\r\n      toast.error('No requirement available for negotiation');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSubmitting(true);\r\n\r\n      const token = getCookie('token');\r\n      if (!token) {\r\n        toast.error('Authentication required. Please login again.');\r\n        return;\r\n      }\r\n\r\n      const payload = {\r\n        data: {\r\n          SellerEmail: \"Sgpvapi@gmail.com\",\r\n          deliveryRelatedInfo: formData.deliveryInfo.trim(),\r\n          messages: formData.additionalInfo.trim(),\r\n          negotiationValue: formData.percentage.toString(),\r\n          previewAmount: Number(requirement.amount) || 0,\r\n          previewQty: requirement.minQty || 0,\r\n          yourQty: formData.quantity.toString(),\r\n          measurement: requirement.measurement || '',\r\n        },\r\n        orderData: {\r\n          _id: requirement._id,\r\n          status: requirement.status,\r\n          productName: requirement.name,\r\n          amount: requirement.amount,\r\n          buyer_email: requirement.buyer_email,\r\n          commission: 15,\r\n          company: requirement.company,\r\n          created_at: requirement.created_at,\r\n          description: requirement.description,\r\n          gstPercentage: requirement.gstPercentage,\r\n          measurement: requirement.measurement,\r\n          minQty: requirement.minQty,\r\n          mobile: requirement.mobile,\r\n          negotiation: true,\r\n          pid: requirement.pid || 0,\r\n          pincode: requirement.pincode,\r\n          reqId: requirement.reqId,\r\n          seller_email: \"Sgpvapi@gmail.com\",\r\n          hsnCode: requirement.hsnCode,\r\n          __v: requirement.__v,\r\n        },\r\n        productData: {\r\n          _id: \"684282326401d44897ab6960\",\r\n          company: requirement.company,\r\n          createdAt: requirement.created_at,\r\n          created_at: requirement.created_at,\r\n          email: \"devcoder2323@gmail.com\",\r\n          gstNo: \"24ACHFS7557F1ZV\",\r\n          measurement: requirement.measurement,\r\n          minQty: requirement.minQty,\r\n          mobile: \"9898341345\",\r\n          name: requirement.name,\r\n          pid: requirement.pid || 0,\r\n          pincode: \"396195\",\r\n          reqId: \"20250606REQ66250\",\r\n          specification: requirement.specification || \"6000 units\",\r\n          status: \"Quoted\",\r\n          userType: \"buyer\",\r\n          __v: requirement.__v, \r\n        },\r\n      };\r\n\r\n      const response = await fetch(`${API_URL}/api/v1/negotiation`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({ message: 'Failed to submit negotiation' }));\r\n        throw new Error(errorData.message || 'Failed to submit negotiation');\r\n      }\r\n      \r\n      toast.success('Negotiation offer submitted successfully!');\r\n      \r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Failed to submit negotiation';\r\n      toast.error(errorMessage);\r\n      console.error('Negotiation submission error:', err);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleCardClick = (negotiation: NegotiationData) => {\r\n    setSelectedNegotiation(negotiation);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedNegotiation(null);\r\n  };\r\n\r\n  const handleSendNegotiation = async (negotiationData: any) => {\r\n    try {\r\n      const token = getCookie('token');\r\n      if (!token) {\r\n        toast.error('Authentication required. Please login again.');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(`${API_URL}/api/v1/negotiation`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(negotiationData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({ message: 'Failed to send negotiation' }));\r\n        throw new Error(errorData.message || 'Failed to send negotiation');\r\n      }\r\n\r\n      toast.success('Negotiation sent successfully!');\r\n      handleCloseModal();\r\n      await fetchNegotiationData();\r\n    } catch (error) {\r\n      console.error(\"Failed to send negotiation:\", error);\r\n      toast.error('Failed to send negotiation');\r\n    }\r\n  };\r\n\r\n  const handleStatusUpdate = async (quotationId: string, newStatus: string) => {\r\n    try {\r\n      const token = getCookie('token');\r\n      if (!token) {\r\n        toast.error('Authentication required. Please login again.');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(`${API_URL}/api/v1/admin/quotations/${quotationId}/status`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ status: newStatus }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update status');\r\n      }\r\n\r\n      toast.success('Status updated successfully');\r\n      await fetchNegotiationData();\r\n    } catch (error) {\r\n      console.error(\"Failed to update status:\", error);\r\n      toast.error('Failed to update status');\r\n    }\r\n  };\r\n\r\n  const handleSendToCustomer = async (quotationId: string, amount: number) => {\r\n    try {\r\n      const token = getCookie('token');\r\n      if (!token) {\r\n        toast.error('Authentication required. Please login again.');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(`${API_URL}/api/v1/admin/quotations/${quotationId}/sendToCustomer`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ amount }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to send to customer');\r\n      }\r\n\r\n      toast.success('Sent to customer successfully');\r\n    } catch (error) {\r\n      console.error(\"Failed to send to customer:\", error);\r\n      toast.error('Failed to send to customer');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"fixed inset-0 flex items-center justify-center bg-black/50\">\r\n        <div className=\"flex items-center space-x-2 text-white\">\r\n          <Loader2 className=\"h-8 w-8 animate-spin\" />\r\n          <span className=\"text-lg\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"fixed inset-0 flex items-center justify-center bg-black/50\">\r\n        <div className=\"flex flex-col items-center space-y-4 text-red-600 bg-red-50 p-6 rounded-lg max-w-md\">\r\n          <AlertCircle size={48} />\r\n          <div className=\"text-center\">\r\n            <h2 className=\"text-lg font-semibold mb-2\">Error Loading Dialog</h2>\r\n            <p className=\"text-sm\">{error}</p>\r\n            <Button \r\n              onClick={() => window.location.reload()} \r\n              className=\"mt-4\"\r\n            >\r\n              Try Again\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (showNegotiationList && !reqId) {\r\n    const filteredData = negotiationData.filter((negotiation) =>\r\n      negotiation.productName?.toLowerCase().includes(searchQuery.toLowerCase()) || false\r\n    );\r\n\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black/50 z-50 overflow-y-auto\">\r\n        <div className=\"min-h-full flex items-center justify-center p-4\">\r\n          <div className=\"bg-white rounded-lg shadow-xl w-full max-w-6xl max-h-[90vh] overflow-hidden\">\r\n            <div className=\"flex justify-between items-center p-6 border-b border-gray-200\">\r\n              <h1 className=\"text-2xl font-bold text-gray-900\">Admin Customer Negotiations</h1>\r\n              <Button\r\n                variant=\"ghost\"\r\n                onClick={() => setShowNegotiationList(false)}\r\n                className=\"text-gray-500 hover:text-gray-700\"\r\n              >\r\n                <X size={20} />\r\n              </Button>\r\n            </div>\r\n\r\n            <div className=\"p-6 border-b border-gray-200\">\r\n              <Input\r\n                value={searchQuery}\r\n                onChange={(e: any) => setSearchQuery(e.target.value)}\r\n                placeholder=\"Search by Product Name\"\r\n                withSearch\r\n                className=\"w-full\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-200px)]\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {filteredData.length > 0 ? (\r\n                  filteredData.map((negotiation) => (\r\n                    <Card \r\n                      key={negotiation._id}\r\n                      className=\"cursor-pointer hover:shadow-lg transition-shadow duration-200\"\r\n                      onClick={() => handleCardClick(negotiation)}\r\n                    >\r\n                      <CardHeader>\r\n                        <CardTitle className=\"text-lg font-semibold flex items-center justify-between\">\r\n                          <span className=\"truncate\">{negotiation.productName || 'N/A'}</span>\r\n                          <Badge variant={negotiation.status || 'default'}>{negotiation.status || 'Unknown'}</Badge>\r\n                        </CardTitle>\r\n                      </CardHeader>\r\n                      <CardContent>\r\n                        <div className=\"space-y-2 text-sm\">\r\n                          <InfoRow \r\n                            icon={<Hash className=\"w-4 h-4 text-gray-500\" />}\r\n                            label=\"Request ID\"\r\n                            value={negotiation.reqId}\r\n                          />\r\n                          <InfoRow \r\n                            icon={<IndianRupee className=\"w-4 h-4 text-gray-500\" />}\r\n                            label=\"Amount\"\r\n                            value={`â‚¹${negotiation.amount || 0}`}\r\n                          />\r\n                          <InfoRow \r\n                            icon={<Package className=\"w-4 h-4 text-gray-500\" />}\r\n                            label=\"Quantity\"\r\n                            value={`${negotiation.minQty || 0} ${negotiation.measurement || ''}`}\r\n                          />\r\n                          <InfoRow \r\n                            icon={<Calendar className=\"w-4 h-4 text-gray-500\" />}\r\n                            label=\"Created\"\r\n                            value={negotiation.created_at ? new Date(negotiation.created_at).toLocaleDateString() : 'N/A'}\r\n                          />\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"col-span-full text-center py-12\">\r\n                    <p className=\"text-gray-500 text-lg\">No negotiations found</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center bg-black/50 z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"flex justify-between items-center p-4 border-b border-gray-200\">\r\n          <h2 className=\"text-xl font-bold text-gray-900\">Negotiation Request</h2>\r\n          <Button\r\n            variant=\"ghost\"\r\n            onClick={() => router.push('/dashboard/tracking')}\r\n            className=\"text-gray-500 hover:text-gray-700\"\r\n          >\r\n            <X size={20} />\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"p-6 space-y-6\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <div className=\"flex items-center text-sm text-gray-600\">\r\n              <Calendar size={14} className=\"mr-1\" />\r\n              <span>{currentDate}</span>\r\n            </div>\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={() => setShowNegotiationList(true)}\r\n              className=\"flex items-center\"\r\n            >\r\n              <Package className=\"w-4 h-4 mr-2\" />\r\n              View All Negotiations\r\n            </Button>\r\n          </div>\r\n\r\n          {user && (\r\n            <Card className=\"border-gray-200 shadow-sm\">\r\n              <CardHeader className=\"bg-gray-50 border-b border-gray-200\">\r\n                <CardTitle className=\"text-lg font-semibold text-gray-900 flex items-center space-x-2\">\r\n                  <User size={18} className=\"text-blue-600\" />\r\n                  <span>Your Details</span>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"p-4\">\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 text-sm\">\r\n                  <InfoRow \r\n                    icon={<User className=\"w-4 h-4 text-gray-500\" />}\r\n                    label=\"Name\"\r\n                    value={user.name}\r\n                  />\r\n                  <InfoRow \r\n                    icon={<Mail className=\"w-4 h-4 text-gray-500\" />}\r\n                    label=\"Email\"\r\n                    value={user.email}\r\n                  />\r\n                  <InfoRow \r\n                    icon={<Phone className=\"w-4 h-4 text-gray-500\" />}\r\n                    label=\"Mobile\"\r\n                    value={user.mobile}\r\n                  />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n\r\n          {requirement && (\r\n            <Card className=\"border-gray-200 shadow-sm\">\r\n              <CardHeader className=\"bg-gray-50 border-b border-gray-200\">\r\n                <CardTitle className=\"text-lg font-semibold text-gray-900 flex items-center space-x-2\">\r\n                  <Package size={18} className=\"text-blue-600\" />\r\n                  <span>Product Details</span>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"p-6\">\r\n                <div className=\"space-y-4\">\r\n                  <h3 className=\"text-base font-semibold text-gray-900\">Requirement #{requirement.reqId}</h3>\r\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 text-sm\">\r\n                    <InfoRow \r\n                      icon={<Package className=\"w-4 h-4 text-gray-500\" />}\r\n                      label=\"Product Name\"\r\n                      value={requirement.name}\r\n                    />\r\n                    <InfoRow \r\n                      icon={<Package className=\"w-4 h-4 text-gray-500\" />}\r\n                      label=\"Quantity\"\r\n                      value={`${requirement.minQty} ${requirement.measurement}`}\r\n                    />\r\n                    <InfoRow \r\n                      icon={<MessageSquare className=\"w-4 h-4 text-gray-500\" />}\r\n                      label=\"Specification\"\r\n                      value={requirement.specification}\r\n                    />\r\n                    <InfoRow \r\n                      icon={<Badge className=\"w-4 h-4 text-gray-500\" />}\r\n                      label=\"Status\"\r\n                      value={requirement.status}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n\r\n          <Card className=\"border-gray-200 shadow-sm\">\r\n            <CardHeader className=\"bg-gray-50 border-b border-gray-200\">\r\n              <CardTitle className=\"text-lg font-semibold text-gray-900 flex items-center space-x-2\">\r\n                <MessageSquare size={18} className=\"text-blue-600\" />\r\n                <span>Submit Your Offer</span>\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"p-6\">\r\n              <form onSubmit={handleSubmitNegotiation} className=\"space-y-6\">\r\n                <div className=\"space-y-4\">\r\n                  <h3 className=\"text-base font-semibold text-gray-900\">Negotiation Details</h3>\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <Label htmlFor=\"percentage\">Your Percentage *</Label>\r\n                      <div className=\"relative mt-1\">\r\n                        <Input\r\n                          id=\"percentage\"\r\n                          name=\"percentage\"\r\n                          type=\"number\"\r\n                          min=\"0.01\"\r\n                          max=\"100\"\r\n                          step=\"0.01\"\r\n                          value={formData.percentage}\r\n                          onChange={handleInputChange}\r\n                          placeholder=\"Enter percentage\"\r\n                          className={validationErrors.percentage ? 'border-red-500' : ''}\r\n                          required\r\n                        />\r\n                        <Percent size={16} className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500\" />\r\n                      </div>\r\n                      {validationErrors.percentage && (\r\n                        <p className=\"text-red-500 text-xs mt-1\">{validationErrors.percentage}</p>\r\n                      )}\r\n                    </div>\r\n                    <div>\r\n                      <Label htmlFor=\"quantity\">Your Quantity *</Label>\r\n                      <Input\r\n                        id=\"quantity\"\r\n                        name=\"quantity\"\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        step=\"1\"\r\n                        value={formData.quantity}\r\n                        onChange={handleInputChange}\r\n                        placeholder=\"Enter quantity\"\r\n                        className={validationErrors.quantity ? 'border-red-500' : ''}\r\n                        required\r\n                      />\r\n                      {validationErrors.quantity && (\r\n                        <p className=\"text-red-500 text-xs mt-1\">{validationErrors.quantity}</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"deliveryInfo\" className=\"flex items-center space-x-2\">\r\n                    <Truck size={14} className=\"text-blue-600\" />\r\n                    <span>Delivery Information *</span>\r\n                  </Label>\r\n                  <Input\r\n                    id=\"deliveryInfo\"\r\n                    name=\"deliveryInfo\"\r\n                    value={formData.deliveryInfo}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Enter delivery information (e.g., address, timeline)\"\r\n                    className={validationErrors.deliveryInfo ? 'border-red-500' : ''}\r\n                    required\r\n                  />\r\n                  {validationErrors.deliveryInfo && (\r\n                    <p className=\"text-red-500 text-xs mt-1\">{validationErrors.deliveryInfo}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"additionalInfo\">Additional Information (Optional)</Label>\r\n                  <Textarea\r\n                    id=\"additionalInfo\"\r\n                    name=\"additionalInfo\"\r\n                    value={formData.additionalInfo}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Any additional comments or requirements\"\r\n                    rows={4}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"border-t border-gray-200 pt-6 flex justify-end space-x-3\">\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"outline\"\r\n                    onClick={() => router.push('/dashboard/tracking')}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    disabled={submitting}\r\n                    className=\"flex items-center\"\r\n                  >\r\n                    {submitting ? (\r\n                      <>\r\n                        <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                        Submitting...\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Send className=\"mr-2 h-4 w-4\" />\r\n                        Submit Offer\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {selectedNegotiation && (\r\n        <NegotiationCard\r\n          data={selectedNegotiation}\r\n          onClose={handleCloseModal}\r\n          onSendNegotiation={handleSendNegotiation}\r\n          onUpdateStatus={handleStatusUpdate}\r\n          onSendToCustomer={handleSendToCustomer}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NegotiationDialog;"],"names":[],"mappings":"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","debugId":null}}]
}