{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Keval/VrajeshRndTechnosoft/sabecho-v2/app/%28orders%29/negotiation/%5Bid%5D/page.tsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\n\r\n// Define interfaces for type safety\r\ninterface OrderData {\r\n  amount: number;\r\n  minQty: number;\r\n  measurement: string;\r\n  seller_email: string;\r\n  name?: string;\r\n  specification?: string;\r\n  status?: string;\r\n}\r\n\r\ninterface ProductData {\r\n  name?: string;\r\n  amount?: number;\r\n  minQty?: number;\r\n  measurement?: string;\r\n  specification?: string;\r\n  status?: string;\r\n}\r\n\r\ninterface Alert {\r\n  type: 'default' | 'destructive';\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\ninterface FormData {\r\n  negotiationType: 'percentage' | '';\r\n  negotiationValue: string;\r\n  yourQty: string;\r\n  deliveryInfo: string;\r\n  additionalNotes: string;\r\n}\r\n\r\n// Main component\r\nconst NegotiationForm: React.FC = () => {\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n  const reqId = searchParams.get('id');\r\n\r\n  const [orderData, setOrderData] = useState<OrderData | null>(null);\r\n  const [productData, setProductData] = useState<ProductData | null>(null);\r\n  const [alert, setAlert] = useState<Alert | null>(null);\r\n  const [formData, setFormData] = useState<FormData>({\r\n    negotiationType: '',\r\n    negotiationValue: '',\r\n    yourQty: '',\r\n    deliveryInfo: '',\r\n    additionalNotes: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (reqId) {\r\n      fetchOrderData();\r\n      fetchProductData();\r\n    }\r\n  }, [reqId]);\r\n\r\n  const fetchOrderData = async () => {\r\n    try {\r\n      const response = await fetch(`/api/v1/quotaRequirement/${reqId}`);\r\n      if (!response.ok) throw new Error('Failed to fetch order data');\r\n      const data: OrderData = await response.json();\r\n      setOrderData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching order data:', error);\r\n      setAlert({\r\n        type: 'destructive',\r\n        title: 'Error',\r\n        description: 'Failed to fetch order data. Please try again.',\r\n      });\r\n    }\r\n  };\r\n\r\n  const fetchProductData = async () => {\r\n    try {\r\n      const response = await fetch(`/api/v1/requirements/reqId/${reqId}`);\r\n      if (!response.ok) throw new Error('Failed to fetch product data');\r\n      const data: ProductData = await response.json();\r\n      setProductData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching product data:', error);\r\n      setAlert({\r\n        type: 'destructive',\r\n        title: 'Error',\r\n        description: 'Failed to fetch product data. Please try again.',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSelectChange = (value: 'percentage' | '') => {\r\n    setFormData((prev) => ({ ...prev, negotiationType: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    if (!orderData || !productData) return;\r\n\r\n    const negotiationData = {\r\n      data: {\r\n        negotiationValue: formData.negotiationValue,\r\n        yourQty: formData.yourQty,\r\n        deliveryRelatedInfo: formData.deliveryInfo,\r\n        messages: formData.additionalNotes,\r\n        previewAmount: orderData.amount,\r\n        previewQty: orderData.minQty,\r\n        measurement: formData.negotiationType,\r\n        SellerEmail: orderData.seller_email,\r\n      },\r\n      productData,\r\n      orderData,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('/api/v1/negotiation', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(negotiationData),\r\n      });\r\n      if (!response.ok) throw new Error('Failed to submit negotiation');\r\n      setAlert({\r\n        type: 'default',\r\n        title: 'Success',\r\n        description: 'Negotiation submitted successfully!',\r\n      });\r\n      setFormData({\r\n        negotiationType: '',\r\n        negotiationValue: '',\r\n        yourQty: '',\r\n        deliveryInfo: '',\r\n        additionalNotes: '',\r\n      });\r\n      setTimeout(() => router.push('/dashboard/Tracking-list'), 3000);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setAlert({\r\n        type: 'destructive',\r\n        title: 'Error',\r\n        description: 'Failed to submit negotiation. Please try again.',\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderImportantFields = (data: OrderData | ProductData | null, title: string) => (\r\n    <div className=\"mb-6 rounded-lg border bg-white shadow-sm\">\r\n      <div className=\"px-6 py-4 border-b\">\r\n        <h2 className=\"text-lg font-semibold\">{title}</h2>\r\n      </div>\r\n      <div className=\"p-6\">\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          {data &&\r\n            Object.entries(data)\r\n              .filter(([key]) =>\r\n                ['name', 'amount', 'minQty', 'measurement', 'specification', 'status'].includes(key)\r\n              )\r\n              .map(([key, value]) => (\r\n                <div key={key} className=\"flex flex-col\">\r\n                  <span className=\"font-medium capitalize\">{key}</span>\r\n                  <span>{value}</span>\r\n                </div>\r\n              ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Negotiation Form</h1>\r\n\r\n      {alert && (\r\n        <div\r\n          className={`mb-4 p-4 rounded-md ${\r\n            alert.type === 'destructive' ? 'bg-red-100 text-red-700' : 'bg-green-100 text-green-700'\r\n          }`}\r\n        >\r\n          <h3 className=\"font-semibold\">{alert.title}</h3>\r\n          <p>{alert.description}</p>\r\n        </div>\r\n      )}\r\n\r\n      {renderImportantFields(productData, 'Product Details')}\r\n      {renderImportantFields(orderData, 'Quotation Details')}\r\n\r\n      <div className=\"rounded-lg border bg-white shadow-sm\">\r\n        <div className=\"px-6 py-4 border-b\">\r\n          <h2 className=\"text-lg font-semibold\">Submit Your Offer</h2>\r\n        </div>\r\n        <div className=\"p-6\">\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"negotiationType\" className=\"block text-sm font-medium mb-1\">\r\n                Negotiation Type\r\n              </label>\r\n              <select\r\n                id=\"negotiationType\"\r\n                value={formData.negotiationType}\r\n                onChange={(e) => handleSelectChange(e.target.value as 'percentage' | '')}\r\n                className=\"w-full border rounded-md p-2\"\r\n              >\r\n                <option value=\"\">Select negotiation type</option>\r\n                <option value=\"percentage\">Percentage</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"negotiationValue\" className=\"block text-sm font-medium mb-1\">\r\n                {formData.negotiationType === 'amount' ? 'Your Offer Amount' : 'Your Offer Percentage'}\r\n              </label>\r\n              <input\r\n                id=\"negotiationValue\"\r\n                name=\"negotiationValue\"\r\n                type=\"number\"\r\n                value={formData.negotiationValue}\r\n                onChange={handleInputChange}\r\n                placeholder={formData.negotiationType === 'amount' ? 'Enter amount' : 'Enter percentage'}\r\n                className=\"w-full border rounded-md p-2\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"yourQty\" className=\"block text-sm font-medium mb-1\">\r\n                Your Quantity\r\n              </label>\r\n              <input\r\n                id=\"yourQty\"\r\n                name=\"yourQty\"\r\n                type=\"number\"\r\n                value={formData.yourQty}\r\n                onChange={handleInputChange}\r\n                className=\"w-full border rounded-md p-2\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"deliveryInfo\" className=\"block text-sm font-medium mb-1\">\r\n                Delivery Information\r\n              </label>\r\n              <input\r\n                id=\"deliveryInfo\"\r\n                name=\"deliveryInfo\"\r\n                value={formData.deliveryInfo}\r\n                onChange={handleInputChange}\r\n                className=\"w-full border rounded-md p-2\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"additionalNotes\" className=\"block text-sm font-medium mb-1\">\r\n                Additional Notes\r\n              </label>\r\n              <textarea\r\n                id=\"additionalNotes\"\r\n                name=\"additionalNotes\"\r\n                value={formData.additionalNotes}\r\n                onChange={handleInputChange}\r\n                className=\"w-full border rounded-md p-2\"\r\n              />\r\n            </div>\r\n\r\n            <button\r\n              onClick={handleSubmit}\r\n              className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\r\n            >\r\n              Submit Offer\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NegotiationForm;"],"names":[],"mappings":"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","debugId":null}}]
}