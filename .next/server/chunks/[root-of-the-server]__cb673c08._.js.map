{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Keval/VrajeshRndTechnosoft/sabecho-v2/lib/db.ts"],"sourcesContent":["import mongoose, { ConnectOptions } from \"mongoose\";\r\n\r\nconst options: ConnectOptions = {\r\n  serverSelectionTimeoutMS: 5000,\r\n  connectTimeoutMS: 10000,\r\n  socketTimeoutMS: 45000,\r\n  retryWrites: true,\r\n};\r\n\r\n// Keep track of the connection status\r\nlet isConnected = false;\r\n\r\nconst connectDb = async (): Promise<void> => {\r\n  if (isConnected) {\r\n    // Already connected\r\n    return;\r\n  }\r\n\r\n  try {\r\n    await mongoose.connect(process.env.MONGODB_URI as string, options);\r\n    isConnected = true;\r\n    console.log(\"Connected to MongoDB\");\r\n  } catch (err) {\r\n    console.log(`DB connection error - ${err}`);\r\n    throw err;\r\n  }\r\n};\r\n\r\nconst closeDbConnection = async (): Promise<void> => {\r\n  try {\r\n    await mongoose.connection.close();\r\n    isConnected = false;\r\n    console.log(\"MongoDB connection closed\");\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport { connectDb, closeDbConnection };\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,UAA0B;IAC9B,0BAA0B;IAC1B,kBAAkB;IAClB,iBAAiB;IACjB,aAAa;AACf;AAEA,sCAAsC;AACtC,IAAI,cAAc;AAElB,MAAM,YAAY;IAChB,IAAI,aAAa;QACf,oBAAoB;QACpB;IACF;IAEA,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAY;QAC1D,cAAc;QACd,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,KAAK;QACZ,QAAQ,GAAG,CAAC,CAAC,sBAAsB,EAAE,KAAK;QAC1C,MAAM;IACR;AACF;AAEA,MAAM,oBAAoB;IACxB,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,UAAU,CAAC,KAAK;QAC/B,cAAc;QACd,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC;IAChB;AACF","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Keval/VrajeshRndTechnosoft/sabecho-v2/models/home/Testimonial.ts"],"sourcesContent":["// lib/models/Testimonial.ts\r\nimport mongoose, { Document, Schema } from 'mongoose';\r\n\r\n// TypeScript interface\r\ninterface Testimonial {\r\n  title: string;\r\n  quote: string;\r\n  name: string;\r\n  position: string;\r\n  backgroundColor: string;\r\n  imagePath: string;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\ninterface TestimonialDocument extends Document, Testimonial {}\r\n\r\nconst testimonialSchema = new Schema<TestimonialDocument>(\r\n  {\r\n    title: {\r\n      type: String,\r\n      required: true,\r\n      trim: true,\r\n    },\r\n    quote: {\r\n      type: String,\r\n      required: true,\r\n      trim: true,\r\n    },\r\n    name: {\r\n      type: String,\r\n      required: true,\r\n      trim: true,\r\n    },\r\n    position: {\r\n      type: String,\r\n      required: true,\r\n      trim: true,\r\n    },\r\n    backgroundColor: {\r\n      type: String,\r\n      required: true,\r\n      trim: true,\r\n    },\r\n    imagePath: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  { timestamps: true },\r\n);\r\n\r\nconst Testimonial = mongoose.models.Testimonial || mongoose.model<TestimonialDocument>('Testimonial', testimonialSchema);\r\n\r\nexport default Testimonial;"],"names":[],"mappings":"AAAA,4BAA4B;;;;AAC5B;;AAgBA,MAAM,oBAAoB,IAAI,yGAAA,CAAA,SAAM,CAClC;IACE,OAAO;QACL,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,OAAO;QACL,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,MAAM;QACJ,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,UAAU;QACR,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,iBAAiB;QACf,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,WAAW;QACT,MAAM;QACN,UAAU;IACZ;AACF,GACA;IAAE,YAAY;AAAK;AAGrB,MAAM,cAAc,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,WAAW,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAsB,eAAe;uCAEvF","debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Keval/VrajeshRndTechnosoft/sabecho-v2/app/api/v1/testimonials/route.ts"],"sourcesContent":["// File: app/api/testimonials/route.ts (Next.js 13+ with TypeScript)\r\n\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport path from \"path\";\r\nimport fs from \"fs/promises\";\r\nimport {connectDb} from \"@/lib/db\";\r\nimport Testimonial from \"@/models/home/Testimonial\";\r\n\r\nexport async function GET() {\r\n  try {\r\n    await connectDb();\r\n    const testimonials = await Testimonial.find();\r\n    return NextResponse.json(testimonials);\r\n  } catch (err) {\r\n    return NextResponse.json({ message: (err as Error).message }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    await connectDb();\r\n    const formData = await req.formData();\r\n\r\n    const title = formData.get(\"title\") as string;\r\n    const quote = formData.get(\"quote\") as string;\r\n    const name = formData.get(\"name\") as string;\r\n    const position = formData.get(\"position\") as string;\r\n    const backgroundColor = formData.get(\"backgroundColor\") as string;\r\n\r\n    let imagePath = \"\";\r\n    const imageFile = formData.get(\"image\");\r\n\r\n    if (imageFile instanceof File) {\r\n      const buffer = Buffer.from(await imageFile.arrayBuffer());\r\n      const filename = Date.now() + path.extname(imageFile.name);\r\n      const filePath = path.join(process.cwd(), \"uploads\", filename);\r\n      await fs.writeFile(filePath, buffer);\r\n      imagePath = filename;\r\n    }\r\n\r\n    const testimonial = new Testimonial({\r\n      title,\r\n      quote,\r\n      name,\r\n      position,\r\n      backgroundColor,\r\n      imagePath\r\n    });\r\n\r\n    const newTestimonial = await testimonial.save();\r\n    return NextResponse.json(newTestimonial, { status: 201 });\r\n  } catch (err) {\r\n    return NextResponse.json({ message: (err as Error).message }, { status: 400 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,oEAAoE;;;;;AAEpE;AACA;AACA;AACA;AACA;;;;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,CAAA,GAAA,2GAAA,CAAA,YAAS,AAAD;QACd,MAAM,eAAe,MAAM,+HAAA,CAAA,UAAW,CAAC,IAAI;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,KAAK;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS,AAAC,IAAc,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF;AAEO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,CAAA,GAAA,2GAAA,CAAA,YAAS,AAAD;QACd,MAAM,WAAW,MAAM,IAAI,QAAQ;QAEnC,MAAM,QAAQ,SAAS,GAAG,CAAC;QAC3B,MAAM,QAAQ,SAAS,GAAG,CAAC;QAC3B,MAAM,OAAO,SAAS,GAAG,CAAC;QAC1B,MAAM,WAAW,SAAS,GAAG,CAAC;QAC9B,MAAM,kBAAkB,SAAS,GAAG,CAAC;QAErC,IAAI,YAAY;QAChB,MAAM,YAAY,SAAS,GAAG,CAAC;QAE/B,IAAI,qBAAqB,MAAM;YAC7B,MAAM,SAAS,OAAO,IAAI,CAAC,MAAM,UAAU,WAAW;YACtD,MAAM,WAAW,KAAK,GAAG,KAAK,iGAAA,CAAA,UAAI,CAAC,OAAO,CAAC,UAAU,IAAI;YACzD,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,WAAW;YACrD,MAAM,qHAAA,CAAA,UAAE,CAAC,SAAS,CAAC,UAAU;YAC7B,YAAY;QACd;QAEA,MAAM,cAAc,IAAI,+HAAA,CAAA,UAAW,CAAC;YAClC;YACA;YACA;YACA;YACA;YACA;QACF;QAEA,MAAM,iBAAiB,MAAM,YAAY,IAAI;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,gBAAgB;YAAE,QAAQ;QAAI;IACzD,EAAE,OAAO,KAAK;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS,AAAC,IAAc,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF","debugId":null}}]
}