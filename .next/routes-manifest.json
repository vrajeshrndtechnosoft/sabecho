{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/checkout/[id]",
      "regex": "^/checkout/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/checkout/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/negotiation/[id]",
      "regex": "^/negotiation/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/negotiation/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/products/[category]",
      "regex": "^/products/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPcategory": "nxtPcategory"
      },
      "namedRegex": "^/products/(?<nxtPcategory>[^/]+?)(?:/)?$"
    },
    {
      "page": "/products/[category]/[subcategory]",
      "regex": "^/products/([^/]+?)/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPcategory": "nxtPcategory",
        "nxtPsubcategory": "nxtPsubcategory"
      },
      "namedRegex": "^/products/(?<nxtPcategory>[^/]+?)/(?<nxtPsubcategory>[^/]+?)(?:/)?$"
    },
    {
      "page": "/products/[category]/[subcategory]/[product]",
      "regex": "^/products/([^/]+?)/([^/]+?)/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPcategory": "nxtPcategory",
        "nxtPsubcategory": "nxtPsubcategory",
        "nxtPproduct": "nxtPproduct"
      },
      "namedRegex": "^/products/(?<nxtPcategory>[^/]+?)/(?<nxtPsubcategory>[^/]+?)/(?<nxtPproduct>[^/]+?)(?:/)?$"
    },
    {
      "page": "/products/[category]/[subcategory]/[product]/[location]",
      "regex": "^/products/([^/]+?)/([^/]+?)/([^/]+?)/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPcategory": "nxtPcategory",
        "nxtPsubcategory": "nxtPsubcategory",
        "nxtPproduct": "nxtPproduct",
        "nxtPlocation": "nxtPlocation"
      },
      "namedRegex": "^/products/(?<nxtPcategory>[^/]+?)/(?<nxtPsubcategory>[^/]+?)/(?<nxtPproduct>[^/]+?)/(?<nxtPlocation>[^/]+?)(?:/)?$"
    },
    {
      "page": "/thankyou/[paymentId]/[orderId]",
      "regex": "^/thankyou/([^/]+?)/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPpaymentId": "nxtPpaymentId",
        "nxtPorderId": "nxtPorderId"
      },
      "namedRegex": "^/thankyou/(?<nxtPpaymentId>[^/]+?)/(?<nxtPorderId>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/about",
      "regex": "^/about(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/about(?:/)?$"
    },
    {
      "page": "/contact",
      "regex": "^/contact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contact(?:/)?$"
    },
    {
      "page": "/dashboard/favourites",
      "regex": "^/dashboard/favourites(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/favourites(?:/)?$"
    },
    {
      "page": "/dashboard/profile",
      "regex": "^/dashboard/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/profile(?:/)?$"
    },
    {
      "page": "/dashboard/tracking",
      "regex": "^/dashboard/tracking(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/tracking(?:/)?$"
    },
    {
      "page": "/payment-failed",
      "regex": "^/payment\\-failed(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/payment\\-failed(?:/)?$"
    },
    {
      "page": "/products",
      "regex": "^/products(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/products(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}